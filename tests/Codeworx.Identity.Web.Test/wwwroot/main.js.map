{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/auth-guard.ts","./src/app/auth-interceptor.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { AuthGuard } from './auth-guard';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DashboardComponent,\r\n    canActivate: [AuthGuard]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  template: `\r\n    <!--The content below is only a placeholder and can be replaced.-->\r\n    <div style=\"text-align:center\" class=\"content\">\r\n      <h1>\r\n        Welcome to {{title}}!\r\n      </h1>\r\n      <button (click)=\"logout()\">logout</button>\r\n    </div>\r\n    <router-outlet></router-outlet>\r\n  `,\r\n  styles: []\r\n})\r\nexport class AppComponent {\r\n  title = 'identity-test';\r\n\r\n  /**\r\n   *\r\n   */\r\n  constructor(private oauthService: OAuthService, private router: Router) {\r\n  }\r\n\r\n  public logout() : void{\r\n    this.oauthService.logOut(false);\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { OAuthService, AuthConfig, OAuthModule } from 'angular-oauth2-oidc';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AuthGuard } from './auth-guard';\r\nimport { UrlHandlingStrategy } from '@angular/router';\r\nimport { AuthInterceptor } from './auth-interceptor';\r\n\r\nconst config: AuthConfig = {\r\n  clientId: 'B45ABA81-AAC1-403F-93DD-1CE42F745ED2',\r\n  issuer: './',\r\n  postLogoutRedirectUri: 'abc',\r\n  oidc: true,\r\n  responseType: 'code',\r\n  requireHttps: true\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    OAuthModule.forRoot(),\r\n    HttpClientModule,\r\n  ],\r\n  providers: [\r\n    AuthGuard,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: AuthInterceptor,\r\n      multi: true\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n  constructor(\r\n    oauthService: OAuthService,\r\n  ) {\r\n    config.issuer = window.location.origin;\r\n    config.redirectUri = window.location.origin;\r\n    config.logoutUrl = window.location.origin + '/account/logout?returnUrl=' + encodeURIComponent(window.location.origin);\r\n    oauthService.configure(config);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { OAuthService } from 'angular-oauth2-oidc'\r\n\r\n@Injectable()\r\nexport class AuthGuard\r\n    implements CanActivate\r\n{\r\n    constructor(private oauthService: OAuthService) {\r\n            \r\n    }\r\n\r\n    public async canActivate(\r\n        route: ActivatedRouteSnapshot, \r\n        state: RouterStateSnapshot): Promise<boolean> \r\n    {\r\n        await this.oauthService.loadDiscoveryDocument();\r\n    \r\n        if(this.oauthService.hasValidAccessToken()){\r\n          return true;\r\n        }\r\n    \r\n        var loggedin = await this.oauthService.tryLogin()\r\n      \r\n        debugger\r\n\r\n        if(loggedin && this.oauthService.hasValidAccessToken())\r\n        {\r\n            return true;\r\n        }\r\n    \r\n        this.oauthService.initLoginFlow();\r\n        return false;\r\n    }\r\n\r\n}","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor\r\n    implements HttpInterceptor {\r\n\r\n    constructor(private oauthService: OAuthService) {\r\n\r\n    }\r\n\r\n    public intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        if (this.oauthService.hasValidAccessToken()) {\r\n            return next.handle(req.clone({ headers: req.headers.set('Authorization', 'Bearer ' + this.oauthService.getAccessToken()) }));\r\n        }\r\n\r\n        return next.handle(req);\r\n    }\r\n\r\n\r\n}","import { Component, OnInit } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\n@Component({\r\n    selector: 'dashboard',\r\n    templateUrl: './dashboard.component.html'\r\n})\r\nexport class DashboardComponent\r\n    implements OnInit {\r\n    constructor(private http: HttpClient) {\r\n\r\n    }\r\n\r\n    public name: string;\r\n\r\n    async ngOnInit(): Promise<void> {\r\n        var response = await this.http.get(\"/api/me\", { responseType: 'text' }).toPromise();\r\n        this.name = response;\r\n    }\r\n\r\n\r\n}","<h3>Dashboard - Component</h3>\r\n<p>{{name}}</p>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}